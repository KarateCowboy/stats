#!/usr/bin/env node
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

const Script = require('./script')
const _ = require('lodash')
const path = require('path')

class UpdateVersions extends Script {

  async run () {
    await this.setup('update-versions-from-crashes')
    const existingVersions = await db.Version.query()
    let versions
    try {
      const existingVersionNumbers = existingVersions.map(i => i.num) 
      let result = await pg_client.query("select distinct(contents->>'ver') as num from dtl.crashes where contents->>'ver' NOT IN ($1)",[existingVersionNumbers])
      versions = result.rows
    } catch (e) {
      console.log(e)
      throw e
    }
    versions = versions.filter((v) => { return v.num.match(/^([0-9]+\.[0-9]+(\.[0-9]+)+)$/) })
    await Promise.all(versions.map(async (version) => {
      try {
        //console.log(`adding version ${version.num}`)
        await db.Version.query().insert(version)
      } catch (e) {
        console.log(e)
      }
    }))

    await this.shutdown()
  }
}

const update_versions = new UpdateVersions(path.basename(__filename))

update_versions.run()
