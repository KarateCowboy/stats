#!/usr/bin/env node

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

/*

  Read and send message to crash reporting parser

*/

const async = require('async')

const pgc = require('../dist/pgc')
const amqpc = require('../dist/amqpc')

// Retrieve id from argument list
var id = process.argv[2]
if (!id) {
  throw new Error("id must be first argument")
}

function resourcesReady (err, resources) {
  if (err) {
    throw new Error(err)
  }
  console.log("Connected")

  // Retrieve the specific crash report
  resources.pg.query("SELECT * FROM dtl.crashes WHERE id = $1", [id], function(queryError, results) {
    if (queryError) {
      throw new Error(queryError)
    }
    if (results.rows.length === 0) {
      console.log("No crash report with that id")
      process.exit(1)
    }

    // Get the crash report component from the record
    var dump = results.rows[0].contents
    console.log(dump)

    // Publish message
    amqpc.send(dump, resources.ch)

    // We need to wait for the message to publish
    setTimeout(function () {
      resources.pg.end()
      process.exit(0)
    }, 500)
  })
}

// Startup, connect to all required resources and start processing
async.parallel({
  pg: pgc.setup,
  ch: amqpc.setup
}, resourcesReady)
